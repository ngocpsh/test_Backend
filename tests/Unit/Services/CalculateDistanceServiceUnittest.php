<?php

namespace Tests\Unit\Services;

use App\Services\AgeDifferenceService;
use App\Services\CalculateDistanceService;
use Tests\TestCase;

class CalculateDistanceServiceUnittest extends TestCase
{
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function distanceProvider()
    {
        return [
            'Empty input' => [
                [], // input
                []  // expected output
            ],
            'Single point' => [
                [[0, 0]],
                [[0, 0]]
            ],
            'Two points' => [
                [[0, 0], [3, 4]],
                [[0, 0]]
            ],
            'Three points in a line' => [
                [[0, 0], [3, 4], [6, 8]],
                [[0, 0]]
            ],
            'Square formation' => [
                [[0, 0], [0, 10], [10, 0], [100, 100]],
                [[100, 100]] // Expected count
            ],
            'Many points' => [
                [[0, 0], [2, 3], [5, 5], [8, 8], [10, 10], [15, 15], [18, 18], [20, 20], [25, 25], [30, 30]],
                [[25, 25]]// Expected count
            ]
        ];
    }

    /**
     * @test
     * @dataProvider distanceProvider
     */
    public function testFindTopAgeDifference($testCase, $expect)
    {
        $service = new CalculateDistanceService();
        $topDistancePeople = $service->calculateDistance($testCase);
        $this->assertEquals($expect, $topDistancePeople);
    }
}
